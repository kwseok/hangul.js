!function(t,e){"object"==typeof exports&&"object"==typeof module?module.exports=e():"function"==typeof define&&define.amd?define(e):"object"==typeof exports?exports.hangul=e():t.hangul=e()}(this,function(){return function(t){function e(u){if(r[u])return r[u].exports;var n=r[u]={exports:{},id:u,loaded:!1};return t[u].call(n.exports,n,n.exports,e),n.loaded=!0,n.exports}var r={};return e.m=t,e.c=r,e.p="",e(0)}([function(t,e,r){"use strict";var u=r(2)["default"];Object.defineProperty(e,"__esModule",{value:!0});var n=r(3),f=u(n),o=r(5),a=u(o),i=r(7),l=u(i),d=r(1),s=u(d),c=r(9),p=u(c),g=r(10),h=u(g),v=r(11),y=u(v);e["default"]={is:f["default"],initial:a["default"],vowel:l["default"],under:s["default"],hasUnder:p["default"],hasLastUnder:h["default"],formatNumber:y["default"]},String.prototype.isHangul=function(t){return f["default"](this.toString(),t)},String.prototype.hangulInitial=function(){return a["default"](this.toString())},String.prototype.hangulVowel=function(){return l["default"](this.toString())},String.prototype.hangulUnder=function(){return s["default"](this.toString())},String.prototype.hasHangulUnder=function(){return p["default"](this.toString())},String.prototype.hasLastHangulUnder=function(){return h["default"](this.toString())},String.prototype.toHangulNumber=function(t){return y["default"](this.toString(),t)},Number.prototype.toHangul=function(t){return y["default"](this.toString(),t)},t.exports=e["default"]},function(t,e,r){"use strict";var u=r(2)["default"];Object.defineProperty(e,"__esModule",{value:!0});var n=r(3),f=u(n),o=r(4),a=u(o);e["default"]=function(t){return f["default"](t,1)?a["default"][parseInt(((65535&t.charCodeAt(0))-44032)%588%28)]:"string"==typeof t?t.charAt(0):t},t.exports=e["default"]},function(t,e){"use strict";e["default"]=function(t){return t&&t.__esModule?t:{"default":t}},e.__esModule=!0},function(t,e){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e["default"]=function(t,e){if("string"!=typeof t||0===t.length)return!1;(!e||0>e||e>t.length)&&(e=t.length);for(var r=0;e>r;r++){var u=t.charCodeAt(r);if(44032>u||u>55203)return!1}return!0},t.exports=e["default"]},function(t,e){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e["default"]=["","ㄱ","ㄲ","ㄳ","ㄴ","ㄵ","ㄶ","ㄷ","ㄹ","ㄺ","ㄻ","ㄼ","ㄽ","ㄾ","ㄿ","ㅀ","ㅁ","ㅂ","ㅄ","ㅅ","ㅆ","ㅇ","ㅈ","ㅊ","ㅋ","ㅌ","ㅍ","ㅎ"],t.exports=e["default"]},function(t,e,r){"use strict";var u=r(2)["default"];Object.defineProperty(e,"__esModule",{value:!0});var n=r(3),f=u(n),o=r(6),a=u(o);e["default"]=function(t){return f["default"](t,1)?a["default"][parseInt(((65535&t.charCodeAt(0))-44032)/588)]:"string"==typeof t?t.charAt(0):t},t.exports=e["default"]},function(t,e){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e["default"]=["ㄱ","ㄲ","ㄴ","ㄷ","ㄸ","ㄹ","ㅁ","ㅂ","ㅃ","ㅅ","ㅆ","ㅇ","ㅈ","ㅉ","ㅊ","ㅋ","ㅌ","ㅍ","ㅎ"],t.exports=e["default"]},function(t,e,r){"use strict";var u=r(2)["default"];Object.defineProperty(e,"__esModule",{value:!0});var n=r(3),f=u(n),o=r(8),a=u(o);e["default"]=function(t){return f["default"](t,1)?a["default"][parseInt(((65535&t.charCodeAt(0))-44032)%588/28)]:"string"==typeof t?t.charAt(0):t},t.exports=e["default"]},function(t,e){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e["default"]=["ㅏ","ㅐ","ㅑ","ㅒ","ㅓ","ㅔ","ㅕ","ㅖ","ㅗ","ㅘ","ㅙ","ㅚ","ㅛ","ㅜ","ㅝ","ㅞ","ㅟ","ㅠ","ㅡ","ㅢ","ㅣ"],t.exports=e["default"]},function(t,e,r){"use strict";var u=r(2)["default"];Object.defineProperty(e,"__esModule",{value:!0});var n=r(3),f=u(n),o=r(1),a=u(o);e["default"]=function(t){return f["default"](t,1)&&""!==a["default"](t)},t.exports=e["default"]},function(t,e,r){"use strict";var u=r(2)["default"];Object.defineProperty(e,"__esModule",{value:!0});var n=r(9),f=u(n);e["default"]=function(t){return"string"!=typeof t||0===t.length?!1:f["default"](t.charAt(t.length-1))},t.exports=e["default"]},function(t,e,r){"use strict";var u=r(2)["default"];Object.defineProperty(e,"__esModule",{value:!0});var n=r(12),f=u(n),o=r(13),a=u(o);e["default"]=function(t,e){if("undefined"==typeof t)throw new TypeError("'number' is undefined");if("string"!=typeof t&&(t=t.toString()),!/^[0-9]+$/.test(t))return t;if("0"===t.charAt(0))for(var r=1;r<t.length;r++)if("0"!==t.charAt(r)){t=t.substring(r);break}if(0===t.length)return f["default"][0];if(1===t.length)return f["default"][t.charAt(0)];for(var u=t.split("").map(function(t){return parseInt(t)}),n=u.reverse(),o=[],r=0;r<n.length;r+=4)o.push(n.slice(r,r+4));return o.map(function(t,e){var r=t.map(function(t,e){var r=t>1||0===e&&1===t?f["default"][t]:"",u=t>0&&e>0?a["default"][0][e-1]:"";return r+u}).reduce(function(t,e){return e+t}),u=e>0&&r.length>0?a["default"][1][(e-1)%4]:"";return r+u}).filter(function(t){return t.length>0}).reduce(function(t,r){return r+(e||"")+t})},t.exports=e["default"]},function(t,e){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e["default"]=["영","일","이","삼","사","오","육","칠","팔","구"],t.exports=e["default"]},function(t,e){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e["default"]=[["십","백","천"],["만","억","조","경"]],t.exports=e["default"]}])});
//# sourceMappingURL=data:application/json;base64,